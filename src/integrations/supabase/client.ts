
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://hbphvrdqhyuipzkgilqz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhicGh2cmRxaHl1aXB6a2dpbHF6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM5NzYyMzUsImV4cCI6MjA1OTU1MjIzNX0.6hiSZj87XlYBUbPnX3i3s1k-jWyoLdpT8P84i7sNMVA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    detectSessionInUrl: true,
    flowType: 'implicit'
  },
  global: {
    headers: {
      'X-Client-Info': 'algoanswerhub'
    }
  },
  db: {
    schema: 'public'
  }
});

// Add a listener for auth state changes for debugging
supabase.auth.onAuthStateChange((event, session) => {
  console.log("Auth state changed (client.ts):", event, session?.user?.id);
  
  // When the authentication state changes, we should update any necessary caches
  if (event === 'SIGNED_OUT') {
    // Clear any application-specific cached data when a user signs out
    console.log("User signed out, clearing any cached data");
  }
});

// Verify the connection and log the status
(async () => {
  try {
    const { data, error } = await supabase.from('profiles').select('count').limit(1);
    
    if (error) {
      console.error("Supabase connection test failed:", error.message);
    } else {
      console.log("Supabase connection test successful");
    }
  } catch (err) {
    console.error("Failed to test Supabase connection:", err);
  }
})();
